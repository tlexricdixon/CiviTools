@page "/designer"
@using Service
@inject ComponentRegistry Registry

<PageTitle>Designer</PageTitle>

<style>
    .designer-grid {
        display: grid;
        grid-template-columns: 260px 1fr 320px;
        gap: 16px;
    }

    .panel {
        border: 1px solid #ddd;
        border-radius: 8px;
        padding: 12px;
    }

    .canvas {
        border: 2px dashed #bbb;
        border-radius: 10px;
        padding: 12px;
        min-height: 300px;
    }

    .node {
        border: 1px solid #e5e5e5;
        padding: 8px;
        border-radius: 8px;
        margin-bottom: 8px;
        background: #fafafa;
    }

        .node.selected {
            outline: 2px solid #2d6cdf;
            background: #eef4ff;
        }

    .toolbar button {
        margin-right: 6px;
    }
</style>

<div class="designer-grid">
    <!-- Toolbox -->
    <section class="panel">
        <h5 class="mb-3">Toolbox</h5>
        @foreach (var d in Registry.All())
        {
            <button class="btn btn-outline-primary btn-sm w-100 mb-2" @onclick="() => AddComponent(d)">@d.DisplayName</button>
        }
        <hr />
        <div class="toolbar">
            <button class="btn btn-outline-secondary btn-sm" disabled="@(_selected is null)" @onclick="MoveUp">Move Up</button>
            <button class="btn btn-outline-secondary btn-sm" disabled="@(_selected is null)" @onclick="MoveDown">Move Down</button>
            <button class="btn btn-outline-danger btn-sm" disabled="@(_selected is null)" @onclick="RemoveSelected">Remove</button>
        </div>
    </section>

    <!-- Canvas -->
    <section class="panel">
        <h5 class="mb-3">Canvas</h5>
        <div class="canvas">
            @if (!Canvas.Any())
            {
                <div class="text-muted">Add components from the toolbox…</div>
            }
            else
            {
                @for (int i = 0; i < Canvas.Count; i++)
                {
                    var node = Canvas[i];
                    var cls = _selected?.Component.Id == node.Component.Id ? "node selected" : "node";
                    <div class="@cls" @onclick="(() => Select(node))">
                        <strong>@node.Component.Title</strong>
                        <div class="small text-muted">@node.Component.GetType().Name</div>
                    </div>
                }
            }
        </div>
    </section>

    <!-- Properties -->
    <section class="panel">
        <h5 class="mb-3">Properties</h5>
        @if (_selected is null)
        {
            <div class="text-muted">Select a component on the canvas.</div>
        }
        else
        {
            @foreach (var pm in _designProps)
            {
                <div class="mb-2">
                    <label class="form-label">@pm.Label</label>
                    @switch (pm.Type)
                    {
                        case "string":
                            <input class="form-control" value="@Convert.ToString(pm.Getter(_selected.Component))" @onchange="(e => SetProp(pm, e.Value))" />
                            break;
                        case "int":
                            <input type="number" class="form-control" value="@Convert.ToString(pm.Getter(_selected.Component))" @onchange="(e => SetProp(pm, e.Value))" />
                            break;
                        case "bool":
                            <input type="checkbox" class="form-check-input" checked="@Equals(pm.Getter(_selected.Component), true)" @onchange="(e => SetProp(pm, (bool?)e.Value == true))" />
                            break;
                        case "select":
                            <select class="form-select" @onchange="(e => SetProp(pm, e.Value))">
                                @if (pm.Options is not null)
                                {
                                    @foreach (var opt in pm.Options)
                                    {
                                        var sel = Equals(Convert.ToString(pm.Getter(_selected.Component)), opt.Value);
                                        <option value="@opt.Value" selected="@sel">@opt.Label</option>
                                    }
                                }
                            </select>
                            break;
                    }
                </div>
            }
        }
    </section>
</div>